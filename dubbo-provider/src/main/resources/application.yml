
spring:
  jmx:
    enabled: false
  profiles:
    active:
      - dubbo
  dubbo:
    application:
      name: demo-provider     # 必填 服务治理 当前应用名称，用于注册中心计算应用间依赖关系，注意：消费者和提供者应用名不要一样，此参数不是匹配条件，你当前项目叫什么名字就填什么，和提供者消费者角色无关，比如：kylin应用调用了morgan应用的服务，则kylin项目配成kylin，morgan项目配成morgan，可能kylin也提供其它服务给别人使用，但kylin项目永远配成kylin，这样注册中心将显示kylin依赖于morgan 1.0.16以上版本
#      owner: laolei           # 可选 服务治理 应用负责人，用于服务治理，请填写负责人公司邮箱前缀 2.0.5以上版本
#      architecture:           # 可选 服务治理 用于服务分层对应的架构。如，intl、china。不同的架构使用不同的分层。 2.0.7以上版本
#      compiler: javassist     # 可选 性能优化 Java字节码编译器，用于动态类的生成，可选：jdk或javassist 2.1.0以上版本
#      environment:            # 可选 服务治理 应用环境，如：develop/test/product，不同环境使用不同的缺省值，以及作为只用于开发测试功能的限制条件 2.0.0以上版本
#      logger: slf4j           # 可选 性能优化 日志输出方式，可选：slf4j,jcl,log4j,jdk 2.2.0以上版本
#      organization:           # 可选 服务治理 组织名称(BU或部门)，用于注册中心区分服务来源，此配置项建议不要使用autoconfig，直接写死在配置中，比如china,intl,itu,crm,asc,dw,aliexpress等 2.0.0以上版本
#      version:                # 可选 服务治理 当前应用的版本 2.2.0以上版本
      qos-enable: true         # 是否启用qos
      qos-port: 1000           # 本机的qos端口
      qos-accept-foreign-ip: true
#####################################################扫描注解的包###############################################################
    base-package: com.example.dubbo.provider  # 注解所在的包,多个用逗号分割
#####################################################扫描注解的包###############################################################


#####################################################发布者通用配置信息###############################################################
    provider:                  # 公用的生产者配置
      retries: -1              # 可选 性能调优 远程服务调用重试次数，不包括第一次调用，不需要重试请设为0 2.0.5以上版本
      accesslog: false         # 可选 服务治理 设为true，将向logger中输出访问日志，也可填写访问日志文件路径，直接把访问日志输出到指定文件 2.0.5以上版本
      token: true              # 可选 服务治理 令牌验证，为空表示不开启，如果为true，表示随机生成动态令牌 2.0.5以上版本
#      filter: providerFilter   # 可选 性能调优 服务提供方远程调用过程拦截器名称，多个名称用逗号分隔 2.0.5以上版本
      registry: test,test1              # 可选 配置关联 向指定注册中心注册，在多个注册中心时使用，值为spring.dubbo.registry.的id属性，多个注册中心ID用逗号分隔，如果不想将该服务注册到任何registry，可将值设为N/A 2.0.5以上版本
#      protocol: dubbo-jvm         # 可选 性能调优 协议名称 1.0.16以上版本

#      delay: -1               # 可选 性能调优 延迟注册服务时间(毫秒)- ，设为-1时，表示延迟到Spring容器初始化完成时暴露服务 2.0.5以上版本
#      deprecated: false       # 可选 服务治理 服务是否过时，如果设为true，消费方引用时将打印服务过时警告error日志 2.0.5以上版本
#      document:               # 可选 服务治理 服务文档URL 2.0.5以上版本
#      dynamic: true           # 可选 服务治理 服务是否动态注册，如果设为false，注册后将显示后disable状态，需人工启用，并且服务提供者停止时，也不会自动取消册，需人工禁用。 2.0.5以上版本
#      executes: 0             # 可选 性能调优 服务提供者每服务每方法最大可并行执行请求数 2.0.5以上版本
#      group:                  # 可选 服务发现 服务分组，当一个接口有多个实现，可以用分组区分 2.0.5以上版本
#      id: dubbo               # 可选 配置关联 协议BeanId，可以在<dubbo:service proivder="">中引用此ID 1.0.16以上版本
#      layer:                  # 可选 服务治理 服务提供者所在的分层。如：biz、dao、intl:web、china:acton。 2.0.7以上版本
#      listener:               # 可选 性能调优 服务提供方导出服务监听器名称，多个名称用逗号分隔 2.0.5以上版本
#      mock: false             # 可选 服务治理 设为true，表示使用缺省Mock类名，即：接口名 + Mock后缀。 2.0.5以上版本
#      owner:                  # 可选 服务治理 服务负责人，用于服务治理，请填写负责人公司邮箱前缀 2.0.5以上版本
#      path:                   # 可选 服务发现 提供者上下文路径，为服务path的前缀 2.0.0以上版本
#      proxy: javassist        # 可选 性能调优 生成动态代理方式，可选：jdk/javassist 2.0.5以上版本
#      stub: false             # 可选 服务治理 设为true，表示使用缺省代理类名，即：接口名 + Local后缀。 2.0.5以上版本
#      version: 0.0.0          # 可选 服务发现 服务版本，建议使用两位数字版本，如：1.0，通常在接口不兼容时版本号才需要升级 2.0.5以上版本
#      weight: 0               # 可选 性能调优 服务权重 2.0.5以上版本
#      accepts: 0              # 可选 性能调优 服务提供者最大可接受连接数 2.0.5以上版本
#      actives: 0              # 可选 性能调优 每服务消费者每服务每方法最大并发调用数 2.0.5以上版本
#      async: false            # 可选 性能调优 是否缺省异步执行，不可靠异步，只是忽略返回值，不阻塞执行线程 2.0.5以上版本
#      buffer: 8192            # 可选 性能调优 网络读写缓冲区大小 2.0.5以上版本
#      charset: UTF-8          # 可选 性能调优 序列化编码 2.0.5以上版本
#      client: netty           # 可选 性能调优 协议的客户端实现类型，比如：dubbo协议的mina,netty等 2.0.0以上版本
#      cluster: failover       # 可选 性能调优 集群方式，可选：failover/failfast/failsafe/failback/forking 2.0.5以上版本
#      codec: dubbo            # 可选 性能调优 协议编码方式 2.0.0以上版本
#      connections: 0          # 可选 性能调优 对每个提供者的最大连接数，rmi、http、hessian等短连接协议表示限制连接数，dubbo等长连接协表示建立的长连接个数 2.0.5以上版本
#      default: false          # 可选 配置关联 是否为缺省协议，用于多协议 1.0.16以上版本
#      host:                   # 可选 服务发现 服务主机名，多网卡选择或指定VIP及域名时使用，为空则自动查找本机IP，建议不要配置，让Dubbo自动获取本机IP 1.0.16以上版本
#      iothreads:              # 可选 性能调优 IO线程池，接收网络读写中断，以及序列化和反序列化，不处理业务，业务线程池参见threads配置，此线程池和CPU相关，不建议配置。 2.0.5以上版本
#      loadbalance: random     # 可选 性能调优 负载均衡策略，可选值：random,roundrobin,leastactive，分别表示：随机，轮循，最少活跃调用 2.0.5以上版本
#      payload: 88388608       # 可选 性能调优 请求及响应数据包大小限制，单位：字节 2.0.0以上版本
#      queues: 0               # 可选 性能调优 线程池队列大小，当线程池满时，排队等待执行的队列大小，建议不要设置，当线程程池时应立即失败，重试其它服务提供机器，而不是排队，除非有特殊需求。 2.0.5以上版本
#      serialization: hessian2 # 可选 性能调优 协议序列化方式，当协议支持多种序列化方式时使用，比如：dubbo协议的dubbo,hessian2,java,compactedjava，以及http协议的json,xml等 2.0.5以上版本
#      server: netty           # 可选 性能调优 协议的服务器端实现类型，比如：dubbo协议的mina,netty等，http协议的jetty,servlet等 2.0.0以上版本
#      telnet:                 # 可选 服务治理 所支持的telnet命令，多个命令用逗号分隔 2.0.5以上版本
#      threadpool: fixed       # 可选 性能调优 线程池类型，可选：fixed/cached 2.0.5以上版本
#      threads: 100            # 可选 性能调优 线程池类型，可选：fixed/cached 2.0.5以上版本
#      timeout: 1000           # 可选 性能调优 远程服务调用超时时间(毫秒) 2.0.5以上版本
#####################################################发布者通用配置信息###############################################################

##################################################发布者配置信息###############################################################
#    services:
#      - provider:
#        accesslog:
#        async:
#        cluster:
#        connections:
#        contextpath:
#        delay:
#        deprecated:
#        document:
#        dynamic:
#        executes:
#        filter:
#        group:
#        interface:
#        layer:
#        listener:
#        loadbalance:
#        mock:
#        owner:
#        path:
#        protocol:
#        proxy:
#        ref:
#        register:
#        registry:
#        retries:
#        stub:
#        timeout:
#        token:
#        version:
#        weight:
#
##################################################发布者配置信息###############################################################
